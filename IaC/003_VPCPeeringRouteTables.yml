AWSTemplateFormatVersion: '2010-09-09'
Description: Create a VPC peering connection between two VPCs
Parameters:
  VPCId:
    Description: ID of the existing VPC
    Type: String
    Default: 'vpc-077379b0b2fb02ca9'
  VPCPeeringId:
    Description: ID of the existing VPCPeeringConnection
    Type: String
    Default: 'pcx-0412f30811f317d94'
  SubnetPubA:
    Description: ID of the existing Public Subnet A
    Type: String
    Default: 'subnet-024bc62d571d9cc65'
  SubnetPubB:
    Description: ID of the existing Public Subnet A
    Type: String
    Default: 'subnet-0e935f2eeab6dc5ab'

  SubnetPrivA:
    Description: ID of the existing Private Subnet A
    Type: String
    Default: 'subnet-0c1e86f1e716b096a'
  SubnetPrivB:
    Description: ID of the existing Private Subnet B
    Type: String
    Default: 'subnet-079ea54578c74cc89'

Resources:
  # Create:
    # Public Route Table
    # Routes to On-Prem DB
    # Associate Route Table to Public Subnets
  AWSDBPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCId # Replace YourVpcIdHere with the logical ID or ARN of your VPC

  AWSPubRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref AWSDBPublicRouteTable  # Replace with the logical ID or ARN of the awsPublicRT route table
      DestinationCidrBlock: "192.168.10.0/24"
      VpcPeeringConnectionId: !Ref VPCPeeringId

  AWSRouteTablePubAssociationA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref AWSDBPublicRouteTable  # Replace with the logical ID or ARN of the awsPublicRT route table
      SubnetId: !Ref SubnetPubA                 # Replace with the logical ID or ARN of the aws-publicA subnet

  AWSRouteTablePubAssociationA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref AWSDBPublicRouteTable  # Replace with the logical ID or ARN of the awsPublicRT route table
      SubnetId: !Ref SubnetPubB                 # Replace with the logical ID or ARN of the aws-publicB subnet

  # /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

  # Create:
    # Public Route Table
    # Routes to On-Prem DB
    # Associate Route Table to Public Subnets
  AWSDBPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCId # Replace YourVpcIdHere with the logical ID or ARN of your VPC

  AWSPrivRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref AWSDBPrivateRouteTable  # Replace with the logical ID or ARN of the awsPrivateRT route table
      DestinationCidrBlock: "192.168.10.0/24"
      VpcPeeringConnectionId: !Ref VPCPeeringId

  AWSRouteTablePrivAssociationA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref AWSDBPrivateRouteTable  # Replace with the logical ID or ARN of the awsPrivateRT route table
      SubnetId: !Ref SubnetPubA                 # Replace with the logical ID or ARN of the aws-privateA subnet

  AWSRouteTablePrivAssociationb:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref AWSDBPrivateRouteTable  # Replace with the logical ID or ARN of the awsPrivateRT route table
      SubnetId: !Ref SubnetPubB                 # Replace with the logical ID or ARN of the aws-privateB subnet


  # AWSRoute2:
  #   Type: "AWS::EC2::Route"
  #   Properties:
  #     RouteTableId: "awsPrivateRT"  # Replace with the logical ID or ARN of the awsPrivateRT route table
  #     DestinationCidrBlock: "192.168.10.0/24"
  #     VpcPeeringConnectionId: !Ref VPCPeeringConnection
  #     DependsOn: VPCPeeringConnection
































    # OnPremisesRoute1:
  #   Type: "AWS::EC2::Route"
  #   Properties:
  #     RouteTableId: "onpremPublicRT"  # Replace with the logical ID or ARN of the onpremPublicRT route table
  #     DestinationCidrBlock: "10.16.0.0/16"
  #     VpcPeeringConnectionId: !Ref VPCPeeringConnection
  #     DependsOn: VPCPeeringConnection